---
author: "Jeanette Nguyen"
format: 
  html:
    self-contained: true
---


```{r}
# load R packages
library(tidyverse)
library(mdsr)
library(nycflights13)
```

# Exercise 1

```{r}
# preview data
head(CIACountries)
```


```{r}
# check dimension of data
dim(CIACountries)
```

## a
```{r}
# use ggplot2 to make a bar plot of the categorical variable net_users
ggplot(data = CIACountries) +
  geom_bar(aes(x = net_users))
```

## b
```{r}
# use ggplot2 to make a scatterplot with log10(pop) on the x-axis 
# and log10(gdp) on the y-axis. Color the points according to net_users.
ggplot(data = CIACountries) +
  geom_point(aes(x = log10(pop), y = log10(gdp), color = net_users))
```


## c
```{r}
# use ggplot2 to make a side-by-side plot showing the 
#association between log10(gdp) and net_users.

#side-by-side boxplot
ggplot(data = CIACountries, aes(x = log10(gdp), y = net_users)) +
  geom_boxplot() + coord_flip()
```


## d
```{r}
# use ggplot2 to make histograms of log10(gdp) for each category of
# net_users (use facet_wrap()). Set the argument bins=10.
ggplot(data = CIACountries,aes(x = log10(gdp))) +
  geom_histogram(bins=10) +
  facet_wrap(vars(net_users))
```


## e
```{r}
# use dplyr to identify the countries with missing values for GDP.
CIACountries |> filter(is.na(gdp))
```


## f
```{r}
# use dplyr to make a table with the count, average GDP, 
# and average population size for each category of net_users.
CIACountries |>
  group_by(net_users) |>
  summarize(
    count = n(),
    GDP_mean = mean(gdp, na.rm = TRUE),
    pop_mean = mean(pop, na.rm = TRUE)
  )
```


# Exercise 2
```{r}
# check data
head(flights)
```


## a
```{r}
# use filter() to find all flights that: flew to 
# San Francisco International Airport (SFO)
filter(flights, dest == "SFO")
```

## b
```{r}
# use filter() to find all flights that: departed in summer 
# (July, Aug, Sept)
filter(flights, month %in% c("7","8","9"))
```

## c
```{r}
# use filter() to find all flights that: were operated by United Airlines,
# and had departure delays that were 10 or more minutes
filter(flights, carrier =="UA", dep_delay >= 10)
```

## d
```{r}
# use filter() to find all flights that: arrived more than two hours late,
# but did not have a late departure
filter(flights, arr_delay > 120, dep_delay <= 0)
```


# Exercise 3

## a 
```{r}
# use group_by() and summarize() to create a dataframe with the following columns: 
# Count of the number of flights to each destination; 
# mean arrival delay for each destination; and 
# standard deviation of arrival delays for each destination
df_flights <- flights |>
  group_by(dest) |>
  summarize(
    count = n(),
    arr_delay_mean = mean(arr_delay, na.rm = TRUE),
    arr_delay_sd = sd(arr_delay, na.rm = TRUE)
  )
df_flights
```


## b
```{r}
# use left_join() to combine the data frame of grouped summary statistics
# from part (a) with the airports data frame. 
# The combined data frame should contain additional columns with
# information about the destination airport. 

#head(nycflights13::airports)
df_flights |> left_join(airports, by = c("dest" = "faa"))
```

## c
Airports with longest average arrival delay are CAE, TUL. and OKC. \

Airports with greatest variability in arrival delays are HNL, TUL, and TVC.
```{r}
# which airports had the longest average arrival delays? 
# Which airports had the greatest variability in their 
# arrival delays? [Hint: use arrange()]


# airports with longest avg arrival delays
flights |>
  group_by(dest) |>
  summarize(
    arr_delay_mean = mean(arr_delay, na.rm = TRUE)
  ) |>
  arrange(desc(arr_delay_mean))

# airports with greatest variability in their arrival delays
flights |>
  group_by(dest) |>
  summarize(
    arr_delay_sd = sd(arr_delay, na.rm = TRUE)
  ) |>
  arrange(desc(arr_delay_sd))
```


## d
4 rows have NA values for the airport name. These rows represent that the Airport codes are missing the full name associated with the codes (dest).
```{r}
# In the joined data table from part (b), how many rows 
# have NA values for the airport name? 
# What do these rows represent?

left_df_flights <- df_flights |> left_join(airports, by = c("dest" = "faa")) 
  
left_df_flights |> dplyr::filter(is.na(name))
```


# Bonus
February had the month with the highest proportion of cancelled flights. \

October had the lowest proportion of cancelled flights. \

It could be that the seasonal patterns for cancelled flights would imply that February and December are the snowiest periods, and June and July are stormy, hence cancellations that may be implied from weather.
```{r}
# Use the flights data frame to answer the following questions:
# What month had the highest proportion of cancelled flights?
# What month had the lowest? Interpret any seasonal patterns.

# month with highest cancelled flights
flights |> 
  group_by(month) |>
  summarize(num_cancelled_flights =  sum(is.na(arr_delay)),
            total = n(),
            proportion_cancelled = num_cancelled_flights/total) |>
  arrange(desc(proportion_cancelled)) 



```
